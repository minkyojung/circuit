/**
 * Todo system types for task tracking and management
 */

import type { ThinkingStep } from './thinking'
import type { Block } from './conversation'

/**
 * Todo status representing the lifecycle of a task
 */
export type TodoStatus =
  | 'pending'       // Not started yet
  | 'in_progress'   // Currently being worked on
  | 'completed'     // Successfully completed
  | 'failed'        // Failed to complete
  | 'skipped'       // Intentionally skipped

/**
 * Todo priority levels
 */
export type TodoPriority = 'low' | 'medium' | 'high' | 'critical'

/**
 * Complexity estimation for a todo
 */
export type TodoComplexity = 'trivial' | 'simple' | 'moderate' | 'medium' | 'complex' | 'very_complex'

/**
 * Todo represents a single actionable task
 * Generated from user prompts or AI analysis
 */
export interface Todo {
  id: string
  conversationId: string
  messageId: string  // The message that generated this todo

  // Hierarchy
  parentId?: string  // Parent todo for nested tasks
  order: number      // Order within siblings
  depth: number      // Nesting level (0 = root)

  // Content
  content: string           // Short description (e.g., "Refactor profile page")
  description?: string      // Detailed description
  activeForm?: string       // Present continuous form (e.g., "Refactoring profile page")

  // Status & Progress
  status: TodoStatus
  progress?: number         // 0-100 percentage (optional)
  priority?: TodoPriority
  complexity?: TodoComplexity

  // Connections
  thinkingStepIds: string[]  // Related thinking steps
  blockIds: string[]         // Related code/command blocks

  // Timing
  estimatedDuration?: number  // Estimated seconds
  actualDuration?: number     // Actual seconds taken
  startedAt?: number          // Timestamp when started
  completedAt?: number        // Timestamp when completed
  createdAt: number
  updatedAt: number

  // Metadata
  metadata?: {
    tags?: string[]
    dependencies?: string[]  // Todo IDs that must complete first
    errorMessage?: string    // Error details if failed
    skipReason?: string      // Reason if skipped
  }
}

/**
 * Todo draft generated by AI before user confirmation
 */
export interface TodoDraft {
  content: string
  description?: string
  activeForm?: string
  parentId?: string
  order: number
  depth: number
  priority?: TodoPriority
  complexity?: TodoComplexity
  estimatedDuration?: number
  children?: TodoDraft[]  // Nested subtasks
}

/**
 * Result of AI todo generation from prompt analysis
 */
export interface TodoGenerationResult {
  todos: TodoDraft[]
  complexity: TodoComplexity
  estimatedTotalTime: number  // Total estimated seconds
  confidence: number          // 0-1 confidence score
  reasoning?: string          // AI's reasoning for breakdown
}

/**
 * Progress update for a todo
 */
export interface TodoProgressUpdate {
  todoId: string
  status?: TodoStatus
  progress?: number
  message?: string
  thinkingStep?: ThinkingStep
  block?: Block
  timestamp: number
}

/**
 * Todo tree node with children for hierarchical display
 */
export interface TodoNode extends Todo {
  children: TodoNode[]
}

/**
 * Todo statistics for a conversation
 */
export interface TodoStats {
  total: number
  pending: number
  inProgress: number
  completed: number
  failed: number
  skipped: number
  completionRate: number       // 0-100
  estimatedTimeRemaining: number  // seconds
  actualTimeSpent: number      // seconds
}

/**
 * Todo filter options
 */
export interface TodoFilter {
  status?: TodoStatus[]
  priority?: TodoPriority[]
  complexity?: TodoComplexity[]
  depth?: number              // Show only specific depth
  showCompleted?: boolean
  showSkipped?: boolean
}

/**
 * Todo sort options
 */
export type TodoSortBy = 'order' | 'priority' | 'createdAt' | 'estimatedDuration'
export type TodoSortOrder = 'asc' | 'desc'

export interface TodoSortOptions {
  by: TodoSortBy
  order: TodoSortOrder
}

/**
 * TodoSession represents a single plan execution cycle
 */
export interface TodoSession {
  id: string
  conversationId: string
  messageId: string          // Message where plan was created
  planResult: TodoGenerationResult
  status: 'pending' | 'active' | 'completed' | 'archived'
  createdAt: number
  startedAt?: number
  completedAt?: number
  archivedAt?: number
}

/**
 * TodoItem represents an active task in the system
 */
export interface TodoItem extends TodoDraft {
  id: string
  workspaceId: string
  status: TodoStatus
  createdAt: number
  startedAt?: number
  completedAt?: number
}

/**
 * Progress tracking for individual todo items
 */
export interface TodoItemProgress {
  todoId: string
  status: TodoStatus
  startedAt?: number
  completedAt?: number
  error?: string
}
